//=================================================================================================
//
// GameGraphicArray ソースファイル
//
//=================================================================================================

//-------------------------------------------------------------------------------------------------
// ヘッダファイルのインクルード
//-------------------------------------------------------------------------------------------------
#include "GameGraphicArray.h"


//-------------------------------------------------------------------------------------------------
// 定義
//-------------------------------------------------------------------------------------------------
namespace GAME
{

	//----------------------------------------------------------------------------------------
	//@info
	//		SetSpritePostion ( VEC3 ) での設定で
	//		スプライトが順番によってアルファ値を完全に透明にしてしまうことの、
	//		原因追究と解決
	// ->
	//		DirectX の仕様
	//		透過情報(α値)のあるオブジェクトをレンダリングするときには、
	//		後(Z値の大きい)のオブジェクトをすべてレンダリングしなければならない
	//----------------------------------------------------------------------------------------

	//------------------------------------------
	//	Static実体
	//------------------------------------------
	// シングルトンオブジェクト
	P_GrpAry	GrpAry::m_inst;

	//Z値で降順ソートされた位置に挿入
	void GameGraphicArray::InsertByZ ( P_GrpBs pTask )
	{
		//一つも無いとき通常の追加
		if ( 0 == GetSize () ) { AddTask ( pTask ); return; }

		//Z値をチェックして指定位置に挿入
		float z = pTask->GetZ ();

		PVP_Task pvpVec = GetpvpTask ();

		int i = 0;
		for ( auto p : (*pvpVec) )
		{
			P_GrpBs pg = dynamic_pointer_cast < GrpBs > ( p );
			float gz = pg->GetZ ();

			//Z値が対象より大きいとき、その前に挿入して終了
			if ( z > gz )
			{
				InsertTask ( pTask, i );
				return;
			}
			++i;
		}

		//すべての値より小さい場合、末尾に追加
		AddTask ( pTask );
	}


}	//namespace GAME

